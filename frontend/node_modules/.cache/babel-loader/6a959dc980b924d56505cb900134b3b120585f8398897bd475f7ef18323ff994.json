{"ast":null,"code":"/**\n * API service for communicating with the Math Worksheet Generator backend\n */const API_BASE_URL=process.env.REACT_APP_API_URL||'https://k2-spiral-backend-929048657215.us-central1.run.app';console.log('API_BASE_URL:',API_BASE_URL);/**\n * Fetches all available math concepts from the backend\n * @returns {Promise<Object>} - Object containing concept categories\n */export const fetchConcepts=async()=>{try{console.log('Fetching concepts from:',`${API_BASE_URL}/concepts`);const response=await fetch(`${API_BASE_URL}/concepts`);console.log('Response status:',response.status);if(!response.ok){throw new Error(`Failed to fetch concepts: ${response.status}`);}const data=await response.json();console.log('Concepts fetched successfully:',data);return data;}catch(error){console.error('Error fetching concepts:',error);throw error;}};/**\n * Generates a math worksheet based on user selections\n * @param {Object} worksheetData - The worksheet configuration\n * @param {string} worksheetData.worksheet_type - \"spiral\" or \"fluency\"\n * @param {string} worksheetData.number_range - \"beginner\", \"intermediate\", or \"advanced\"\n * @param {Array<string>} worksheetData.concepts - Selected math concepts\n * @param {boolean} worksheetData.include_answer_key - Whether to include answer key\n * @returns {Promise<Blob>} - PDF blob for download\n */export const generateWorksheet=async worksheetData=>{try{console.log('Generating worksheet with data:',worksheetData);// Create a modified copy of the data\nconst requestData={...worksheetData,// Map number_range to difficulty\ndifficulty:worksheetData.number_range,// Rename problem_count to question_count if it exists\nquestion_count:worksheetData.problem_count||15};// Remove fields that the backend doesn't expect\ndelete requestData.number_range;delete requestData.problem_count;console.log('Sending request to:',`${API_BASE_URL}/api/generate-worksheet`);console.log('Request data:',requestData);// Use the correct API endpoint\nconst response=await fetch(`${API_BASE_URL}/api/generate-worksheet`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(requestData)});console.log('Generate worksheet response status:',response.status);if(!response.ok){const errorData=await response.json().catch(()=>null);throw new Error((errorData===null||errorData===void 0?void 0:errorData.detail)||'Failed to generate worksheet');}// The response now contains a download URL\nconst data=await response.json();console.log('Received download URL:',data.download_url);// Make a second request to get the actual PDF\nconsole.log('Downloading PDF from:',`${API_BASE_URL}${data.download_url}`);const pdfResponse=await fetch(`${API_BASE_URL}${data.download_url}`);if(!pdfResponse.ok){throw new Error('Failed to download worksheet');}return await pdfResponse.blob();}catch(error){console.error('Error generating worksheet:',error);throw error;}};/**\n * Downloads a generated worksheet as a PDF\n * @param {Blob} blob - The PDF blob\n * @param {string} filename - Name for the downloaded file\n */export const downloadWorksheetPDF=function(blob){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'math_worksheet.pdf';// Create a URL for the blob\nconst url=URL.createObjectURL(blob);// Create a temporary anchor element\nconst link=document.createElement('a');link.href=url;link.download=filename;// Programmatically click the link to trigger the download\ndocument.body.appendChild(link);link.click();// Clean up\ndocument.body.removeChild(link);URL.revokeObjectURL(url);};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","console","log","fetchConcepts","response","fetch","status","ok","Error","data","json","error","generateWorksheet","worksheetData","requestData","difficulty","number_range","question_count","problem_count","method","headers","body","JSON","stringify","errorData","catch","detail","download_url","pdfResponse","blob","downloadWorksheetPDF","filename","arguments","length","undefined","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL"],"sources":["/Users/sravya/Desktop/K2_Spiral_Learning/frontend/src/services/api.js"],"sourcesContent":["/**\n * API service for communicating with the Math Worksheet Generator backend\n */\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://k2-spiral-backend-929048657215.us-central1.run.app';\n\nconsole.log('API_BASE_URL:', API_BASE_URL);\n\n/**\n * Fetches all available math concepts from the backend\n * @returns {Promise<Object>} - Object containing concept categories\n */\nexport const fetchConcepts = async () => {\n  try {\n    console.log('Fetching concepts from:', `${API_BASE_URL}/concepts`);\n    const response = await fetch(`${API_BASE_URL}/concepts`);\n    \n    console.log('Response status:', response.status);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch concepts: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    console.log('Concepts fetched successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching concepts:', error);\n    throw error;\n  }\n};\n\n/**\n * Generates a math worksheet based on user selections\n * @param {Object} worksheetData - The worksheet configuration\n * @param {string} worksheetData.worksheet_type - \"spiral\" or \"fluency\"\n * @param {string} worksheetData.number_range - \"beginner\", \"intermediate\", or \"advanced\"\n * @param {Array<string>} worksheetData.concepts - Selected math concepts\n * @param {boolean} worksheetData.include_answer_key - Whether to include answer key\n * @returns {Promise<Blob>} - PDF blob for download\n */\nexport const generateWorksheet = async (worksheetData) => {\n  try {\n    console.log('Generating worksheet with data:', worksheetData);\n    \n    // Create a modified copy of the data\n    const requestData = {\n      ...worksheetData,\n      // Map number_range to difficulty\n      difficulty: worksheetData.number_range,\n      // Rename problem_count to question_count if it exists\n      question_count: worksheetData.problem_count || 15\n    };\n    \n    // Remove fields that the backend doesn't expect\n    delete requestData.number_range;\n    delete requestData.problem_count;\n    \n    console.log('Sending request to:', `${API_BASE_URL}/api/generate-worksheet`);\n    console.log('Request data:', requestData);\n    \n    // Use the correct API endpoint\n    const response = await fetch(`${API_BASE_URL}/api/generate-worksheet`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestData)\n    });\n    \n    console.log('Generate worksheet response status:', response.status);\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => null);\n      throw new Error(errorData?.detail || 'Failed to generate worksheet');\n    }\n    \n    // The response now contains a download URL\n    const data = await response.json();\n    console.log('Received download URL:', data.download_url);\n    \n    // Make a second request to get the actual PDF\n    console.log('Downloading PDF from:', `${API_BASE_URL}${data.download_url}`);\n    const pdfResponse = await fetch(`${API_BASE_URL}${data.download_url}`);\n    \n    if (!pdfResponse.ok) {\n      throw new Error('Failed to download worksheet');\n    }\n    \n    return await pdfResponse.blob();\n  } catch (error) {\n    console.error('Error generating worksheet:', error);\n    throw error;\n  }\n};\n\n/**\n * Downloads a generated worksheet as a PDF\n * @param {Blob} blob - The PDF blob\n * @param {string} filename - Name for the downloaded file\n */\nexport const downloadWorksheetPDF = (blob, filename = 'math_worksheet.pdf') => {\n  // Create a URL for the blob\n  const url = URL.createObjectURL(blob);\n  \n  // Create a temporary anchor element\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  \n  // Programmatically click the link to trigger the download\n  document.body.appendChild(link);\n  link.click();\n  \n  // Clean up\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}